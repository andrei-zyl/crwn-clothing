{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\crwn-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        signUpStart\n      } = this.props; /////\n\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        alert(\"Password doesn't match!\");\n        return;\n      }\n\n      signUpStart(displayName, email, password);\n      this.setState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      });\n      /*try{\r\n          const {user} = await auth.createUserWithEmailAndPassword(email, password);\r\n          await createUserProfileDocument(user, {displayName});\r\n            this.setState({\r\n              displayName: '',\r\n              email: '',\r\n              password: '',\r\n              confirmPassword: '',\r\n          })\r\n      }\r\n      catch(error){\r\n          console.error(error);\r\n      }*/\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-up\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I don't have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign up with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"sign-up-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"displayName\",\n          type: \"text\",\n          value: displayName,\n          handleChange: this.handleChange,\n          label: \"Display Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          value: email,\n          handleChange: this.handleChange,\n          label: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: password,\n          handleChange: this.handleChange,\n          label: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"confirmPassword\",\n          type: \"password\",\n          value: confirmPassword,\n          handleChange: this.handleChange,\n          label: \"Confirm Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password) => dispatch(signUpStart({\n    displayName,\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/User/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","FormInput","CustomButton","auth","createUserProfileDocument","connect","signUpStart","SignUp","Component","constructor","handleSubmit","event","preventDefault","props","displayName","email","password","confirmPassword","state","alert","setState","handleChange","name","value","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport {auth, createUserProfileDocument} from '../../firebase/firebase.utils';\r\nimport {connect} from 'react-redux';\r\nimport {signUpStart} from '../../redux/user/user.actions';\r\nimport './sign-up.styles.scss';\r\n\r\nclass SignUp extends React.Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const {signUpStart} = this.props;/////\r\n        const{ displayName, email, password, confirmPassword} = this.state;\r\n\r\n        if(password !== confirmPassword){\r\n            alert(\"Password doesn't match!\");\r\n            return;\r\n        }\r\n        \r\n        signUpStart(displayName, email, password);\r\n        \r\n        this.setState({\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n        })\r\n        /*try{\r\n            const {user} = await auth.createUserWithEmailAndPassword(email, password);\r\n            await createUserProfileDocument(user, {displayName});\r\n\r\n            this.setState({\r\n                displayName: '',\r\n                email: '',\r\n                password: '',\r\n                confirmPassword: '',\r\n            })\r\n        }\r\n        catch(error){\r\n            console.error(error);\r\n        }*/\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        const{ displayName, email, password, confirmPassword} = this.state;\r\n        return(\r\n            <div className='sign-up'>\r\n                <h2>I don't have an account</h2>\r\n                <span>Sign up with your email and password</span>\r\n\r\n                <form className='sign-up-form' onSubmit={this.handleSubmit}>\r\n                    <FormInput \r\n                        name='displayName'\r\n                        type='text' \r\n                        value={displayName} \r\n                        handleChange={this.handleChange} \r\n                        label='Display Name' \r\n                        required/>\r\n\r\n                    <FormInput \r\n                        name='email'\r\n                        type='email' \r\n                        value={email} \r\n                        handleChange={this.handleChange} \r\n                        label='Email' \r\n                        required/>\r\n\r\n                    <FormInput \r\n                        name='password'\r\n                        type='password' \r\n                        value={password} \r\n                        handleChange={this.handleChange} \r\n                        label='Password' \r\n                        required/>\r\n\r\n                    <FormInput \r\n                        name='confirmPassword'\r\n                        type='password' \r\n                        value={confirmPassword} \r\n                        handleChange={this.handleChange} \r\n                        label='Confirm Password' \r\n                        required/>\r\n                    <CustomButton type='submit'>Sign up</CustomButton>    \r\n                </form>               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: (displayName, email, password) => dispatch(signUpStart({displayName, email, password}))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}