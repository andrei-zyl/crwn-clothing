{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\crwn-clothing\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport CheckoutPage from './pages/checkout/checkout.components';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      } else {\n        setCurrentUser(userAuth);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shop\",\n          component: ShopPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/checkout\",\n          component: CheckoutPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signin\",\n          render: () => this.props.currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 14\n          }, this) : /*#__PURE__*/_jsxDEV(SignInAndSignUpPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/User/crwn-clothing/src/App.js"],"names":["React","HomePage","ShopPage","Header","CheckoutPage","SignInAndSignUpPage","Switch","Route","Redirect","connect","setCurrentUser","createStructuredSelector","selectCurrentUser","auth","createUserProfileDocument","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,mBAAP,MAAiC,2DAAjC;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,2BAA7B;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,iBAAR,QAAgC,6BAAhC;AACA,SAAQC,IAAR,EAAcC,yBAAd,QAA8C,2BAA9C;;AAEA,MAAMC,GAAN,SAAkBf,KAAK,CAACgB,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,mBADgC,GACV,IADU;AAAA;;AAGhCC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACR,MAAAA;AAAD,QAAmB,KAAKS,KAA9B;AAEA,SAAKF,mBAAL,GAA2BJ,IAAI,CAACO,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AACnE,UAAGA,QAAH,EAAY;AACV,cAAMC,OAAO,GAAG,MAAMR,yBAAyB,CAACO,QAAD,CAA/C;AAEAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAE3Bd,UAAAA,cAAc,CAAE;AACde,YAAAA,EAAE,EAAED,QAAQ,CAACC,EADC;AAEd,eAAGD,QAAQ,CAACE,IAAT;AAFW,WAAF,CAAd;AAIH,SAND;AAOD,OAVD,MAYI;AACFhB,QAAAA,cAAc,CAACW,QAAD,CAAd;AACD;AACF,KAhB0B,CAA3B;AAiBD;;AAEDM,EAAAA,oBAAoB,GAAE;AACpB,SAAKV,mBAAL;AACD;;AAEDW,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAE3B;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,WAAlB;AAA8B,UAAA,SAAS,EAAEE;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,SAAlB;AAA4B,UAAA,MAAM,EAAE,MAClC,KAAKe,KAAL,CAAWU,WAAX,gBACC,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADD,gBAEC,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAHH;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA5C+B;;AA+ClC,MAAMC,eAAe,GAAGnB,wBAAwB,CAAC;AAC/CkB,EAAAA,WAAW,EAAEjB;AADkC,CAAD,CAAhD;;AAIA,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCtB,EAAAA,cAAc,EAAEuB,IAAI,IAAID,QAAQ,CAACtB,cAAc,CAACuB,IAAD,CAAf;AADM,CAAL,CAAnC;;AAIA,eAAexB,OAAO,CAACqB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6ChB,GAA7C,CAAf","sourcesContent":["import React from 'react'; \nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport CheckoutPage from './pages/checkout/checkout.components';\nimport SignInAndSignUpPage  from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {setCurrentUser} from './redux/user/user.actions';\nimport {createStructuredSelector} from 'reselect';\nimport {selectCurrentUser} from './redux/user/user.selectors';\nimport {auth, createUserProfileDocument} from './firebase/firebase.utils';\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount(){\n    const {setCurrentUser} = this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if(userAuth){\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot(snapShot => {\n          \n            setCurrentUser ({\n              id: snapShot.id,\n              ...snapShot.data()\n            })\n        })\n      }\n\n      else{\n        setCurrentUser(userAuth)\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.unsubscribeFromAuth();\n  }\n\n  render(){\n    return (\n      <div>\n        <Header/>\n        <Switch>\n          <Route exact path='/' component={HomePage}/>\n          <Route path='/shop' component={ShopPage}/>\n          <Route exact path='/checkout' component={CheckoutPage}/>\n          <Route exact path='/signin' render={() => \n            this.props.currentUser ? \n            (<Redirect to='/'/>) : \n            (<SignInAndSignUpPage/>)}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}